{"version":3,"sources":["components/Header.jsx","components/Startpage.jsx","components/Allaquiz.jsx","components/Omoss.jsx","components/Quizcard.jsx","components/Result.jsx","components/Quizpage.jsx","App.js","reportWebVitals.js","index.js"],"names":["header","className","to","Startpage","useState","homePage","setHomePage","siteDescription","setSiteDescription","latestPosts","setLatestPosts","useEffect","fetchHomePage","a","fetch","then","result","json","catch","e","console","error","fetchLatestPosts","fetchSiteDescription","title","rendered","description","map","post","quiz_title","thumbnail","quiz_thumbnail","id","quiz_id","category","quiz_category","name","replace","pathname","src","alt","renderQuizTitles","Allaquiz","allQuizes","setAllQuizes","categories","setCategories","collectCategories","fetchQuizes","list","reduce","previous","current","find","prevItem","push","sort","cat","quizList","filter","quiz","i","Omoss","content","setContent","fetchContent","log","parse","Quizcard","props","currentGuess","setCurrentGuess","clickedBtn","setClickedBtn","initialStyle","applyStyle","right_answer","applyClickedStyle","handleClick","addScore","legend","question","length","question_image","onClick","answer_1","answer_2","answer_3","answer_4","explanation","disabled","setNextQuestion","lastQuestion","Result","scoreBoard","correct","answer","message","resultMessage","Quizpage","useParams","quizInfo","setQuizInfo","questions","setQuestions","currentQuestion","setCurrentQuestion","setScoreBoard","quizLength","setQuizLength","setLegend","finished","setFinished","setLastQuestion","quizUrl","fetchQuiz","guess","rightAnswer","prevScore","prevstate","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAuBeA,G,MAnBA,WACX,OACI,iCACI,qBAAKC,UAAU,cAAf,SACI,qBAAIA,UAAU,YAAd,UACI,cAAC,IAAD,CAASC,GAAG,IAAZ,SACI,uCAEJ,cAAC,IAAD,CAASA,GAAG,aAAZ,SACI,6CAEJ,cAAC,IAAD,CAASA,GAAG,UAAZ,SACI,mD,+BC+ETC,G,MA1FG,WAAK,IAAD,EAEcC,qBAFd,mBAEXC,EAFW,KAEDC,EAFC,OAG4BF,qBAH5B,mBAGXG,EAHW,KAGMC,EAHN,OAKoBJ,mBAAS,MAL7B,mBAKXK,EALW,KAKEC,EALF,KAOlBC,qBAAU,WACN,IAIMC,EAAa,uCAAG,sBAAAC,EAAA,sEACZC,MALU,sEAMPC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAM,OAAEV,EAAYU,MACzBE,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,MAJhB,2CAAH,qDAObG,EAAgB,uCAAG,sBAAAT,EAAA,sEACfC,MAXa,yEAYVC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAM,OAAEN,EAAeM,MAC5BE,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,MAJb,2CAAH,qDAOhBI,EAAoB,uCAAG,sBAAAV,EAAA,sEACnBC,MAjBiB,iDAkBdC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAM,OAAER,EAAmBQ,MAChCE,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,MAJT,2CAAH,qDAO1BP,IACAU,IACAC,MAED,IAmCH,OAEI,uBAAMtB,UAAU,UAAhB,UACI,sBAAKA,UAAU,UAAf,UACI,6BAAKI,EAAWA,EAASmB,MAAMC,SAAW,eAC1C,6BAAKlB,GAAmBA,EAAgBmB,iBAE5C,sBAAKzB,UAAU,aAAf,UACI,qDACA,0BAEJ,qBAAKA,UAAU,oBAAf,SACmB,MAAdQ,EAAqBA,EAAYkB,KAAI,SAAAC,GAAI,OApCjC,SAACA,GAEtB,IAAIJ,EAAQI,EAAKC,WACbC,EAAYF,EAAKG,eACjBC,EAAKJ,EAAKK,QACVC,EAAWN,EAAKO,cAAc,GAAGC,KAAKC,QAAQ,SAAU,KAE5D,OACI,cAAC,IAAD,CAAkBnC,GAAI,CAClBoC,SAAS,SAAD,OAAWN,IADvB,SAGI,0BAAS/B,UAAU,UAAnB,UACI,iCACI,qBAAKsC,IAAKT,EAAWU,IAAKhB,MAE9B,6BAAKA,IACL,+BAAOU,QARJV,GA4B2CiB,CAAiBb,MAAS,UCDzEc,G,MAlFE,WAAK,IAAD,EAEiBtC,mBAAS,MAF1B,mBAEVuC,EAFU,KAECC,EAFD,OAGmBxC,mBAAS,IAH5B,mBAGVyC,EAHU,KAGEC,EAHF,KAKjBnC,qBAAW,YAIU,uCAAG,sBAAAE,EAAA,sEACVC,MAHM,2EAIHC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GACF4B,EAAa5B,GACb8B,EAAcC,EAAkB/B,OAEnCE,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,MAPlB,2CAAH,qDAUjB6B,KAED,IAEH,IAAMD,EAAoB,SAACE,GACvB,OAAOA,EAAKC,QAAO,SAACC,EAAUC,GAM3B,OALID,EAASE,MAAK,SAACC,GACf,OAAOA,IAAaF,EAAQjB,cAAc,GAAGC,SAE9Ce,EAASI,KAAKH,EAAQjB,cAAc,GAAGC,MAEnCe,IACR,KAoCN,OACI,uBAAMlD,UAAU,UAAhB,UACI,qBAAKA,UAAU,OAAf,SACI,6CAEJ,qBAAKA,UAAU,oBAAf,SACK4C,GAAcA,EAAWW,OAAO7B,KAAI,SAAA8B,GACjC,IAxCOvB,EAAUwB,EAwCb1C,EAAS2B,EAAUgB,QAAO,SAAAC,GAAI,OAAIA,EAAKzB,cAAc,GAAGC,OAASqB,KACrE,OAzCOvB,EAyCcuB,EAzCJC,EAyCS1C,EAnC9B,0BAAwBf,UAAU,mBAAlC,UACI,6BAAKiC,EAASG,QAAQ,SAAU,OAChC,uBACCqB,EAAS/B,KAAI,SAACiC,EAAMC,GACjB,IAAIrC,EAAQoC,EAAK/B,WACbG,EAAK4B,EAAK3B,QACVH,EAAY8B,EAAK7B,eAErB,OAEI,cAAC,IAAD,CAAoB7B,GAAI,CACpBoC,SAAS,SAAD,OAAWN,IADvB,SAGI,sBAAK/B,UAAU,uBAAf,UACI,iCACI,qBAAKsC,IAAKT,EAAWU,IAAKhB,MAE9B,6BAAiBA,GAARA,OAPNA,EAAMqC,QAVf3B,a,iBCbf4B,EA7BD,WAAK,IAAD,EAEgB1D,mBAAS,MAFzB,mBAEP2D,EAFO,KAEEC,EAFF,KAsBd,OAlBArD,qBAAW,YAIW,uCAAG,sBAAAE,EAAA,sEACXC,MAHE,yEAICC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GACFgD,EAAWhD,MAEdE,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,MANjB,2CAAH,qDASlB8C,KAED,IAEH7C,QAAQ8C,IAAIH,GAER,mCACCA,GAAWI,IAAMJ,EAAQ,GAAGA,QAAQtC,a,uBCuG9B2C,G,MA/HE,SAACC,GAAS,IAAD,EAEkBjE,mBAAS,MAF3B,mBAEfkE,EAFe,KAEDC,EAFC,OAGcnE,mBAAS,MAHvB,mBAGfoE,EAHe,KAGHC,EAHG,KAIhBC,EAAe,YAEfC,EAAa,SAAC3C,GAShB,OALIA,IAAOqC,EAAMO,aACL,QAEA,SAKVC,EAAoB,SAAC7C,GASvB,OALIA,IAAOwC,EACC,UAEA,IAKVM,EAAc,SAAC9C,GAEjByC,EAAczC,GACdqC,EAAMU,SAAS/C,IAWnB,OACI,sBAAK/B,UAAU,YAAf,UACI,uBAAMA,UAAU,YAAhB,UAA6BoE,EAAMW,OAAOC,SAA1C,MAAuDZ,EAAMW,OAAOE,UACnEb,EAAMc,gBACH,wBAAQlF,UAAU,uBAAlB,SACI,qBAAKsC,IAAK8B,EAAMc,eAAgB3C,IAAK6B,EAAMY,aAE/C,0BAAShF,UAAU,eAAnB,UACI,6BAAKoE,EAAMY,SAAS5C,QAAQ,MAAO,MACnC,qBAAIpC,UAAU,UAAd,UACI,oBAAIA,UAAU,mBAAd,SACI,wBACAA,UAAS,UAAKyE,EAAL,YAAqBJ,GAAgBK,EAAW,KAAhD,YAAwDH,GAAcK,EAAkB,MACjGO,QAAS,WACAd,IACDC,EAAgB,KAChBO,EAAY,OALpB,SAQCT,EAAMgB,SAAShD,QAAQ,MAAO,QAGnC,oBAAIpC,UAAU,mBAAd,SACI,wBACAA,UAAS,UAAKyE,EAAL,YAAqBJ,GAAgBK,EAAW,KAAhD,YAAwDH,GAAcK,EAAkB,MACjGO,QAAS,WACAd,IACDC,EAAgB,KAChBO,EAAY,OALpB,SAQCT,EAAMiB,SAASjD,QAAQ,MAAO,QAGnC,oBAAIpC,UAAU,mBAAd,SACI,wBACAA,UAAS,UAAKyE,EAAL,YAAqBJ,GAAgBK,EAAW,KAAhD,YAAwDH,GAAcK,EAAkB,MACjGO,QAAS,WACAd,IACDC,EAAgB,KAChBO,EAAY,OALpB,SAQCT,EAAMkB,SAASlD,QAAQ,MAAO,QAGnC,oBAAIpC,UAAU,mBAAd,SACI,wBACAA,UAAS,UAAKyE,EAAL,YAAqBJ,GAAgBK,EAAW,KAAhD,YAAwDH,GAAcK,EAAkB,MACjGO,QAAS,WACAd,IACDC,EAAgB,KAChBO,EAAY,OALpB,SAQCT,EAAMmB,SAASnD,QAAQ,MAAO,WAKtCiC,GAAgBD,EAAMoB,aACvB,8BACI,4BACKpB,EAAMoB,mBAKvB,wBACAxF,UAAU,gBACVyF,UAAUpB,EACVc,QAAS,WACDd,IA7EZD,EAAMsB,kBA+EMpB,EAAgB,MAChBE,EAAc,QAPtB,SAUCJ,EAAMuB,aAAe,iBAAmB,2BCtFtCC,EAtCA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,WAEPC,EAAUD,EAAWnC,QAAO,SAAAqC,GAAM,OAAe,IAAXA,KAAiBd,OACvDlE,EAAU+E,EAAUD,EAAWZ,OAAW,IAC1Ce,EACO,6CADPA,EAEK,wDAFLA,EAGI,oDAHJA,EAIQ,8GAJRA,EAKI,2FAoBV,OACI,sBAAKhG,UAAU,wBAAf,UACI,sDACA,uBACA,yCAAY8F,EAAZ,eAA8BD,EAAWZ,OAAzC,kBACA,4BAtBc,WAElB,QAAQ,GACJ,KAAKlE,GAAU,GACX,OAAOiF,EACX,KAAKjF,GAAU,GACX,OAAOiF,EACX,KAAKjF,EAAS,GACV,OAAOiF,EACX,KAAKjF,GAAU,GACX,OAAOiF,EAEX,QACI,OAAOA,GASPC,SC2DDC,G,MAxFE,WAAK,IAEXnE,EAAMoE,cAANpE,GAFU,EAIe5B,mBAAS,MAJxB,mBAIViG,EAJU,KAIAC,EAJA,OAKiBlG,mBAAS,MAL1B,mBAKVmG,EALU,KAKCC,EALD,OAM6BpG,mBAAS,MANtC,mBAMVqG,EANU,KAMOC,EANP,OAOmBtG,mBAAS,IAP5B,mBAOV0F,EAPU,KAOEa,EAPF,OAQmBvG,mBAAS,MAR5B,mBAQVwG,EARU,KAQEC,EARF,OASWzG,mBAAS,IATpB,mBASV4E,EATU,KASF8B,EATE,OAUe1G,oBAAS,GAVxB,mBAUV2G,EAVU,KAUAC,EAVA,OAWuB5G,oBAAS,GAXhC,mBAWVwF,EAXU,KAWIqB,EAXJ,KAcjBtG,qBAAU,WACN,IAAMuG,EAAO,yEAAqElF,IAEnE,uCAAG,sBAAAnB,EAAA,sEACRC,MAAMoG,GACHnG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GACFsF,EAAYtF,EAAO,GAAG,IACtBwF,EAAaxF,EAAO,IACpB6F,EAAc7F,EAAO,GAAGkE,QACxB4B,EAAU,CAAC7B,SAAU,EAAGC,OAAQlE,EAAO,GAAGkE,YAE7ChE,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,MATpB,2CAAH,qDAafgG,KAED,CAACnF,IAEJrB,qBAAU,WACF4F,GAAWG,EAAmBH,EAAU,MAE7C,CAACA,IAoCJ,OACI,uBAAMtG,UAAU,UAAhB,UACI,6BAAiB,MAAZoG,EAAmBA,EAAS7E,MAAQ,eAC3CuF,EAKE,qBAAK9G,UAAU,iBAAf,SACI,cAAC,EAAD,CAAQ6F,WAAYA,MALxB,qBAAK7F,UAAU,eAAf,SACwB,MAAnBwG,EAA0B,cAAC,EAAD,2BAAcA,GAAd,IAA+BzB,OAAQA,EAAQD,SAvCrE,SAACqC,GAEd,IAAIC,EAAcZ,EAAgB7B,aAI9B+B,EAFCS,IAAUC,EAEG,SAAAC,GAAS,4BAAOA,GAAP,EAAkB,KAI3B,SAAAA,GAAS,4BAAOA,GAAP,EAAkB,OA6ByD1B,aAAcA,EAAcD,gBAvBjH,WACdG,EAAWZ,OAAS0B,GAEnBF,EAAmBH,EAAUT,EAAWZ,SACxC4B,GAAU,SAAAS,GAAS,kCACZA,GADY,IAEftC,SAAUa,EAAWZ,OAAS,OAG9BY,EAAWZ,SAAW0B,EAAY,GAClCK,GAAgB,IAGpBD,GAAY,OAUoJ,YC5D7JQ,MAhBf,WACE,OACI,cAAC,IAAD,UACE,sBAAKvH,UAAU,MAAf,UACE,cAAC,EAAD,IACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwH,KAAK,aAAZ,SAAyB,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOA,KAAK,UAAZ,SAAsB,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOA,KAAK,YAAYC,UAAWvB,IACnC,cAAC,IAAD,CAAOsB,KAAK,IAAZ,SAAgB,cAAC,EAAD,eCNfE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9G,MAAK,YAAkD,IAA/C+G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86cca8b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../style/Header.scss';\r\n\r\nconst header = ()=>{\r\n    return (\r\n        <header>\r\n            <nav className='qf-main-nav'>\r\n                <ul className='qf-nav-ul'>\r\n                    <NavLink to='/'>\r\n                        <li>Hem</li>\r\n                    </NavLink>\r\n                    <NavLink to='/alla-quiz'>\r\n                        <li>Alla quiz</li>\r\n                    </NavLink>\r\n                    <NavLink to='/om-oss'>\r\n                        <li>Om oss</li>\r\n                    </NavLink>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default header;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../style/Startpage.scss';\r\n\r\nconst Startpage = ()=>{\r\n\r\n    const [homePage, setHomePage] = useState();\r\n    const [siteDescription, setSiteDescription] = useState();\r\n    // const [heroImg, setHeroImg] = useState('');\r\n    const [latestPosts, setLatestPosts] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        const homePageUrl = 'https://www.peowstudio.com/quizforge/wp-json/wp/v2/pages/10?_embed';\r\n        const latestPostsUrl = 'https://www.peowstudio.com/quizforge/wp-json/quizforge/v1/quizposts/6';\r\n        const siteDescriptionUrl = 'https://www.peowstudio.com/quizforge/wp-json/';\r\n\r\n        const fetchHomePage = async ()=>{\r\n            await fetch(homePageUrl)\r\n                    .then(result => result.json())\r\n                    .then(result=>setHomePage(result))\r\n                    .catch(e => console.error(e));\r\n        }\r\n\r\n        const fetchLatestPosts = async ()=>{\r\n            await fetch(latestPostsUrl)\r\n                    .then(result => result.json())\r\n                    .then(result=>setLatestPosts(result))\r\n                    .catch(e => console.error(e));\r\n        }\r\n\r\n        const fetchSiteDescription = async ()=>{\r\n            await fetch(siteDescriptionUrl)\r\n                    .then(result => result.json())\r\n                    .then(result=>setSiteDescription(result))\r\n                    .catch(e => console.error(e));\r\n        }\r\n\r\n        fetchHomePage();\r\n        fetchLatestPosts();\r\n        fetchSiteDescription();\r\n\r\n    }, []);\r\n\r\n    // useEffect(()=>{\r\n    //     if (homePage != null){\r\n\r\n    //         setHeroImg(homePage._embedded[\"wp:featuredmedia\"][0].media_details.sizes[\"1536x1536\"].source_url);\r\n    //     }\r\n        \r\n    // }, [homePage]);\r\n\r\n\r\nconst renderQuizTitles = (post) => {\r\n\r\n    let title = post.quiz_title;\r\n    let thumbnail = post.quiz_thumbnail;\r\n    let id = post.quiz_id;\r\n    let category = post.quiz_category[0].name.replace(/&amp;/g, '&');\r\n    \r\n    return(\r\n        <Link key={title} to={{\r\n            pathname: `/quiz/${id}`,\r\n        }}>\r\n            <article className='qf-card'>\r\n                <figure>\r\n                    <img src={thumbnail} alt={title}/>\r\n                </figure>\r\n                <h3>{title}</h3>\r\n                <span>{category}</span>\r\n            </article>\r\n        </Link>\r\n\r\n    )\r\n\r\n}\r\n\r\n    return(\r\n\r\n        <main className=\"qf-main\">\r\n            <div className=\"qf-hero\">\r\n                <h1>{homePage ? homePage.title.rendered : 'Laddar ...'}</h1>\r\n                <h2>{siteDescription && siteDescription.description}</h2>\r\n            </div>\r\n            <div className=\"qf-divider\">\r\n                <h3>Senast skapade quiz</h3>\r\n                <hr/>\r\n            </div>\r\n            <div className='qf-card-container'>\r\n                {latestPosts !=null ? latestPosts.map(post => renderQuizTitles(post)) : ''}\r\n            </div>\r\n\r\n        </main>\r\n    )\r\n}\r\nexport default Startpage;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../style/Allaquiz.scss';\r\n\r\n\r\nconst Allaquiz = ()=>{\r\n\r\n    const [allQuizes, setAllQuizes] = useState(null);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect( ()=> {\r\n\r\n        const quizUrl = 'https://www.peowstudio.com/quizforge/wp-json/quizforge/v1/quizposts/all';\r\n\r\n        const fetchQuizes = async ()=>{\r\n            await fetch(quizUrl)\r\n                    .then(result => result.json())\r\n                    .then(result=>{\r\n                        setAllQuizes(result)\r\n                        setCategories(collectCategories(result))\r\n                    })\r\n                    .catch(e => console.error(e))\r\n        }\r\n\r\n        fetchQuizes();\r\n\r\n    }, [])\r\n\r\n    const collectCategories = (list) => {\r\n        return list.reduce((previous, current) => {\r\n           if(!previous.find((prevItem) =>{\r\n               return prevItem === current.quiz_category[0].name;\r\n           })) {\r\n              previous.push(current.quiz_category[0].name);\r\n           }\r\n           return previous;\r\n       }, []);\r\n      }\r\n    \r\n    const renderCatCard = (category, quizList) => {\r\n        // console.log(quizList)\r\n        // quizList.sort((a,b) => a.quiz_title - b.quiz_title);\r\n\r\n        return(\r\n                \r\n                <article key={category} className='qf-category-card'> \r\n                    <h3>{category.replace(/&amp;/g, '&')}</h3>\r\n                    <hr/>\r\n                    {quizList.map((quiz, i) => {\r\n                        let title = quiz.quiz_title;\r\n                        let id = quiz.quiz_id;\r\n                        let thumbnail = quiz.quiz_thumbnail;\r\n\r\n                        return (\r\n\r\n                            <Link key={title+i} to={{\r\n                                pathname: `/quiz/${id}`,\r\n                            }}>\r\n                                <div className=\"qf-list-item-wrapper\">\r\n                                    <figure>\r\n                                        <img src={thumbnail} alt={title}/>\r\n                                    </figure>\r\n                                    <h4 key={title}>{title}</h4>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </article>\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <main className='qf-main'>\r\n            <div className='hero'>\r\n                <h1>Alla quiz</h1>\r\n            </div>\r\n            <div className='qf-card-container'>\r\n                {categories && categories.sort().map(cat => {\r\n                    let result = allQuizes.filter(quiz => quiz.quiz_category[0].name === cat);\r\n                    return renderCatCard(cat, result);\r\n                })}\r\n            </div>\r\n        </main>\r\n\r\n    )\r\n}\r\nexport default Allaquiz;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport parse from 'html-react-parser';\r\n\r\nconst Omoss = ()=>{\r\n\r\n    const [content, setContent] = useState(null);\r\n\r\n    useEffect( ()=> {\r\n\r\n        const url = 'https://www.peowstudio.com/quizforge/wp-json/wp/v2/pages?slug=contact';\r\n\r\n        const fetchContent = async ()=>{\r\n            await fetch(url)\r\n                    .then(result => result.json())\r\n                    .then(result=>{\r\n                        setContent(result)\r\n                    })\r\n                    .catch(e => console.error(e))\r\n        }\r\n\r\n        fetchContent();\r\n\r\n    }, [])\r\n\r\n    console.log(content)\r\n    return(\r\n        <>\r\n        {content && parse(content[0].content.rendered)}\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default Omoss;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport '../style/Quizcard.scss';\r\n\r\nconst Quizcard = (props)=>{\r\n\r\n    const [currentGuess, setCurrentGuess] = useState(null);\r\n    const [clickedBtn, setClickedBtn] = useState(null);\r\n    const initialStyle = 'guess-btn';\r\n\r\n    const applyStyle = (id) => {\r\n\r\n        let style ='';\r\n\r\n        if (id === props.right_answer) {\r\n            style = 'right';\r\n        } else {\r\n            style = 'wrong';\r\n        }\r\n        return style;\r\n    }\r\n\r\n    const applyClickedStyle = (id) => {\r\n\r\n        let style ='';\r\n\r\n        if (id === clickedBtn) {\r\n            style = 'clicked';\r\n        } else {\r\n            style = '';\r\n        }\r\n        return style;\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n\r\n        setClickedBtn(id);\r\n        props.addScore(id);\r\n\r\n    }\r\n\r\n    const handleNext = () => {\r\n\r\n        props.setNextQuestion()\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"quiz-card\">\r\n            <span className='qf-legend'>{props.legend.question} / {props.legend.length}</span>\r\n            {props.question_image && \r\n                <figure className=\"question-img-wrapper\">\r\n                    <img src={props.question_image} alt={props.question}/>\r\n                </figure>}\r\n                <section className=\"card-content\">\r\n                    <h3>{props.question.replace(/\\\\/g, '')}</h3>\r\n                    <ul className=\"answers\">\r\n                        <li className=\"answer-list-item\">\r\n                            <button\r\n                            className={`${initialStyle} ${currentGuess && applyStyle('1')} ${clickedBtn && applyClickedStyle('1')}`}\r\n                            onClick={()=> {\r\n                                if (!currentGuess){\r\n                                    setCurrentGuess('1')\r\n                                    handleClick('1')\r\n                                }\r\n                                }}> \r\n                            {props.answer_1.replace(/\\\\/g, '')}\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"answer-list-item\">\r\n                            <button \r\n                            className={`${initialStyle} ${currentGuess && applyStyle('2')} ${clickedBtn && applyClickedStyle('2')}`}\r\n                            onClick={()=> {\r\n                                if (!currentGuess){\r\n                                    setCurrentGuess('2')\r\n                                    handleClick('2')\r\n                                }\r\n                                }}> \r\n                            {props.answer_2.replace(/\\\\/g, '')}\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"answer-list-item\">\r\n                            <button \r\n                            className={`${initialStyle} ${currentGuess && applyStyle('3')} ${clickedBtn && applyClickedStyle('3')}`}\r\n                            onClick={()=> {\r\n                                if (!currentGuess){\r\n                                    setCurrentGuess('3')\r\n                                    handleClick('3')\r\n                                }\r\n                                }}> \r\n                            {props.answer_3.replace(/\\\\/g, '')}\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"answer-list-item\">\r\n                            <button \r\n                            className={`${initialStyle} ${currentGuess && applyStyle('4')} ${clickedBtn && applyClickedStyle('4')}`}\r\n                            onClick={()=> {\r\n                                if (!currentGuess){\r\n                                    setCurrentGuess('4')\r\n                                    handleClick('4')\r\n                                }\r\n                                }}> \r\n                            {props.answer_4.replace(/\\\\/g, '')}\r\n                            </button>\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                    {currentGuess && props.explanation && \r\n                    <div>\r\n                        <p>\r\n                            {props.explanation}\r\n                        </p>\r\n                    </div>\r\n                    }\r\n                </section>\r\n            <button \r\n            className=\"next-question\"\r\n            disabled={currentGuess ? false : true}\r\n            onClick={()=> {\r\n                if (currentGuess) {\r\n                    handleNext();\r\n                    setCurrentGuess(null);\r\n                    setClickedBtn(null);\r\n                }\r\n                }}>\r\n            {props.lastQuestion ? 'Visa resultat!' : 'Nästa fråga' }\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Quizcard;","import React from 'react';\r\n\r\nconst Result = ({scoreBoard})=>{\r\n\r\n    const correct = scoreBoard.filter(answer => answer === true).length;\r\n    const result = (correct / scoreBoard.length ) * 100;\r\n    const message = {\r\n        perfect: 'Du kunde verkligen det här! Bra jobbat!',\r\n        great: 'Wow, vi är impade! Du hade nästan alla rätt!',\r\n        good: 'Bra jobbat! Du hade mer än hälften rätt.',\r\n        moderate: 'Hm, du kanske borde läsa på lite innan du tar det här quizet en gång till. Du kan bättre! =)',\r\n        poor: 'Det här var illa. Du kanske ska prova ett quiz i ett ämne som intresserar dig mer?',\r\n      }\r\n    \r\n    const resultMessage = () => {\r\n\r\n        switch (true) {\r\n            case result >= 95:\r\n                return message.perfect;\r\n            case result >= 80:\r\n                return message.great;\r\n            case result > 50:\r\n                return message.good;\r\n            case result >= 20:\r\n                return message.moderate;\r\n                \r\n            default:\r\n                return message.poor;\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"quiz-card quiz-result\">\r\n            <h3>Nu är quizet slut</h3>\r\n            <hr/>\r\n            <p>Du hade {correct} rätt av {scoreBoard.length} möjliga.</p>\r\n            <p>{resultMessage()}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Result;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Quizcard from './Quizcard';\r\nimport Result from './Result';\r\nimport '../style/Quizpage.scss';\r\n\r\nconst Quizpage = ()=>{\r\n\r\n    const {id} = useParams();\r\n\r\n    const [quizInfo, setQuizInfo] = useState(null);\r\n    const [questions, setQuestions] = useState(null);\r\n    const [currentQuestion, setCurrentQuestion] = useState(null);\r\n    const [scoreBoard, setScoreBoard] = useState([]);\r\n    const [quizLength, setQuizLength] = useState(null);\r\n    const [legend, setLegend] = useState({});\r\n    const [finished, setFinished] = useState(false);\r\n    const [lastQuestion, setLastQuestion] = useState(false);\r\n    \r\n\r\n    useEffect(()=>{\r\n        const quizUrl = `https://www.peowstudio.com/quizforge/wp-json/quizforge/v1/quiz/${id}`;\r\n\r\n        const fetchQuiz = async ()=>{\r\n            await fetch(quizUrl)\r\n                    .then(result => result.json())\r\n                    .then(result=>{\r\n                        setQuizInfo(result[0][0])\r\n                        setQuestions(result[1])\r\n                        setQuizLength(result[1].length)\r\n                        setLegend({question: 1, length: result[1].length})\r\n                    })\r\n                    .catch(e => console.error(e));\r\n        }\r\n\r\n       \r\n        fetchQuiz();\r\n        \r\n    }, [id]);\r\n\r\n    useEffect(()=>{\r\n        if (questions){setCurrentQuestion(questions[0])}\r\n\r\n    }, [questions])\r\n\r\n    const addScore = (guess) => {\r\n\r\n        let rightAnswer = currentQuestion.right_answer;\r\n\r\n        if ( guess === rightAnswer ) {\r\n            \r\n            setScoreBoard(prevScore =>[...prevScore, true])\r\n\r\n        } else {\r\n            \r\n            setScoreBoard(prevScore =>[...prevScore, false])\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        if(scoreBoard.length < quizLength){\r\n\r\n            setCurrentQuestion(questions[scoreBoard.length])\r\n            setLegend(prevstate => ({\r\n                ...prevstate,\r\n                question: scoreBoard.length + 1\r\n            }))\r\n\r\n            if (scoreBoard.length === quizLength -1) {\r\n                setLastQuestion(true);\r\n            }\r\n        } else {\r\n            setFinished(true);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <main className=\"qf-main\">\r\n            <h1>{quizInfo != null ? quizInfo.title : 'Laddar ...'}</h1>\r\n        {!finished ?\r\n            <div className='quiz-wrapper'>\r\n                {currentQuestion != null ? <Quizcard {...currentQuestion} legend={legend} addScore={addScore} lastQuestion={lastQuestion} setNextQuestion={nextQuestion}/>: null}\r\n            </div>\r\n            :\r\n            <div className='result-wrapper'>\r\n                <Result scoreBoard={scoreBoard}/>\r\n            </div>}\r\n        </main>\r\n\r\n    )\r\n}\r\nexport default Quizpage;","import './App.scss';\r\nimport Header from'./components/Header';\r\nimport Startpage from './components/Startpage';\r\nimport Allaquiz from './components/Allaquiz';\r\nimport Omoss from './components/Omoss';\r\nimport Quizpage from './components/Quizpage';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n            <Switch>\r\n              <Route path='/alla-quiz'><Allaquiz /></Route>\r\n              <Route path='/om-oss'><Omoss /></Route>\r\n              <Route path='/quiz/:id' component={Quizpage}></Route>\r\n              <Route path='/'><Startpage /></Route>\r\n            </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}